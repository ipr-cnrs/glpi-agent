---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# .. Syntax [[[
# .. This file is used by a script to generate the README.md file.
# .. Any line starting with "# .." will be ignored by the script.
# .. Some other patterns will also be ignored ("---", "# \]\]\]",…).
# .. If you don't know how-to manage, simply duplicate the content of an
# .. existing variable.
# .. ]]]

## Default variables

### Packages and installation [[[

#### glpi_agent__enabled [[[
# **Boolean**. Enable or disable glpi-agent's installation and configuration.
# Default value:
glpi_agent__enabled: true
# ]]]

#### glpi_agent__install_from_url [[[
# **Boolean**. If GLPI Agent package should be installed from package build by
# GLIP project.
# Default value:
glpi_agent__install_from_url: false
# ]]]

#### glpi_agent__version [[[
# **String**. GLPI Agent version to install.
# Default value:
glpi_agent__version: '1.5-1'
# ]]]

#### glpi_agent__major_version [[[
# **String**. Extract the major version in order to build
# glpi_agent__package_url variable.
# * eg. for the last version (1.5-1), it will become **1.5**.
# Default value:
glpi_agent__major_version: '{{ glpi_agent__version.split("-")[0] }}'
# ]]]

#### glpi_agent__package_name [[[
# **List**. GLPI Agent package name to install.
# Default value:
glpi_agent__package_name:
  - glpi-agent
# ]]]

#### Debian glpi_agent__package_url [[[
# The URL used to download .deb package for GLPI Agent.
# eg for version **1.5** :
# https://github.com/glpi-project/glpi-agent/releases/download/1.5/glpi-agent_1.5-1_all.deb
# Default value:
glpi_agent__package_url: '{{ "https://github.com/glpi-project/glpi-agent/releases/download/"
                           + glpi_agent__major_version
                           + "/glpi-agent_"
                           + glpi_agent__version
                           + "_all.deb" }}'
# ]]]

#### glpi_agent__depends [[[
# **Boolean**. If GLPI Agent dependencies should be installed.
# Required for installation from URL and because some might be
# missing from dependencies list…
# See the dependencies list in OS vars files
# ([Debian](#debian-glpi_agent__depends_packages)) below.
# Default value:
glpi_agent__depends: '{{ True if ansible_os_family in ["Debian"]
                                   else False }}'
# ]]]

#### glpi_agent__recommends [[[
# **Boolean**. If GLPI Agent packages recommandations should be installed.
# See the recommandations list in OS vars files
# ([Debian](#debian-glpi_agent__recommends_packages)) below.
# Default value:
glpi_agent__recommends: false
# ]]]

#### glpi_agent__suggests [[[
# **Boolean**. If GLPI Agent packages suggestions should be installed.
# See the suggestions list in OS vars files
# ([Debian](#debian-glpi_agent__suggests_packages)) below.
# Default value:
glpi_agent__suggests: false
# ]]]
### ]]]

### Fusioninventory Agent [[[

# The [official documentation][glpi agent doc installation]
# recommends to uninstall fusioninventory agent before installing GLPI Agent.
# Packages and related configuration files won't be purge by this role.

#### glpi_agent__fusioninventory_agent_state [[[
# State of previous Fusioninventory agent.
# Default value:
glpi_agent__fusioninventory_agent_state: 'absent'
# ]]]

#### glpi_agent__fusioninventory_agent_packages [[[
# List of Fusioninventory agent packages to remove.
# Default value:
glpi_agent__fusioninventory_agent_packages:
  - fusioninventory-agent
# ]]]
### ]]]

### Configuration [[[

# See [official documentation][glpi agent doc configuration]
# for all parameters syntax.

#### glpi_agent__conf_file_dest [[[
# **String**. Path to GLPI Agent configuration file on the host.
# Default value:
glpi_agent__conf_file_dest: '/etc/glpi-agent/conf.d/00-ansible.cfg'
# ]]]

#### glpi_agent__conf_file_src [[[
# **String**. Template used to provide GLPI Agent configuration file.
# Default value:
glpi_agent__conf_file_src: '{{ "../templates" + glpi_agent__conf_file_dest + ".j2" }}'
# ]]]

#### glpi_agent__conf_raw [[[
# **String**. Template used to provide GLPI Agent configuration file.
# Default value:
glpi_agent__conf_raw: ''
# ```
# Usage exemple:
# ``` yml
# glpi_agent__conf_raw: |
#   tag = my_new_tag
# ]]]
### ]]]

### Service [[[

#### glpi_agent__service_state [[[
# **String**. The targeted service status
# Default value:
glpi_agent__service_state: '{{ "started" if (glpi_agent__enabled | bool)
                          else "stopped" }}'
# ]]]

#### glpi_agent__service_enabled [[[
# **String**. The targeted service status
# Default value:
glpi_agent__service_enabled: '{{ glpi_agent__enabled | bool }}'
# ]]]

### ]]]

### Cron configuration [[[

# Instead of running a systemd service, `glpi-agent` can be ran by a cronjob.

# <details>
#   <summary>List of cron's related variables (<i>click to expand</i>).</summary>
#   <!-- have to be followed by an empty line! -->

#### glpi_agent__cron [[[
# **String**. If cronjob should be installed. Can be "absent" or "present".
# Default value:
glpi_agent__cron: 'absent'
# ]]]

#### glpi_agent__cron_day [[[
# Which days should the agent be ran.
# Default value:
glpi_agent__cron_day: '*'
# ]]]

#### glpi_agent__cron_hour [[[
# Which hours should the agent be ran.
# Default value:
glpi_agent__cron_hour: '23'
# ]]]

#### glpi_agent__cron_minute [[[
# Which minutes should the agent be ran.
# Default value:
glpi_agent__cron_minute: '0'
# ]]]

#### glpi_agent__cron_month [[[
# Which months should the agent be ran.
# Default value:
glpi_agent__cron_month: '*'
# ]]]

#### glpi_agent__cron_weekday [[[
# Which weekdays should the agent be ran.
# Default value:
glpi_agent__cron_weekday: '*'
# ]]]

#### glpi_agent__cron_user [[[
# Which user should the agent be ran under.
# Default value:
glpi_agent__cron_user: 'root'
# ]]]

#### glpi_agent__cron_command [[[
# The command should cron run.
# Default value:
glpi_agent__cron_command: 'sleep $(( RANDOM \\% 3600 )); /bin/glpi-agent'
# ]]]

# </details>
### ]]]
